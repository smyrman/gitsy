#!/bin/bash
# # Copyright 2010: Sindre RÃ¸kenes Myren | smyrman -at- gmail -dot- com
# This program, Gitsy, is release under the GPL2 Licencs. See the file COPYING
# for more information.

source $HOME/.gitsyrc


## Helper functions ##

# Add repository to REPOS in ~/.gitsyrc
function add2repos {
	# Check if $1 is already in REPOS:
	exists=false
	for i in ${REPOS[@]}; do [[ "$i" == "$1" ]] && exists=true && break; done
	# Add $1 to REPOS:
	if [ $exists == false ]; then
		echo "# Adding '$1' to REPOS in ~/.gitsyrc"
		sed "s|^REPOS=(\(.*\))|REPOS=(\1 '$1')|" < $HOME/.gitsyrc > /tmp/gitsyrc
		mv /tmp/gitsyrc $HOME/.gitsyrc
	else
		echo "# '$1' already in REPOS in ~/.gitsyrc"
	fi
}


## Main switch case (argument check) ##

case $1 in
# Print help and exit
help)
	echo -e "USAGE:\n  gitsy COMMAND"

	echo -e "\nCOMMANDS:"
	echo -e "  help        show this text"
	echo -e "  status      Show a sumary og all changes done so far"
	echo -e "  init REPO   Initialize new repo locally and on remote"
	echo -e "  clone REPO  First-time clone of an existing repo from remote"
	echo -e "  sync        A shortcut for \"gitsy pull && gitsy push\""
	echo -e "  pull        pull all changes from REMOTE_HOST"
	echo -e "  push        add and commit all changes, then push to REMOTE_HOST"

	echo -e "\nNOTE: Gitsy commands are NOT affected by the \$PWD!"
	echo -e "For the init command, note that REPO must be the name of a"\
	        "folder in your home directory. To add folders outside your"\
	        "home dir, see the README."
	exit
;;

# Add an commit all changes, then push master to origin/master (all repos)
push)
	for repo in ${REPOS[@]}; do
		echo -e "\n\e[1;32m## Repository located at '$HOME/$repo' ##\e[m"
		cd $HOME/$repo && git add . && git commit -a -m "autocommit on $(date)" && \
			git push origin master
	done
;;

# pull from origin/master (all repos)
pull)
	for repo in ${REPOS[@]}; do
		echo -e "\n\e[1;32m## Repository located at '$HOME/$repo' ##\e[m"
		cd $HOME/$repo && git pull origin master
	done
;;
# pull AND push from/to origin/master (all repos)
sync)
	for repo in ${REPOS[@]}; do
		echo -e "\n\e[1;32m## Repository located at '$HOME/$repo' ##\e[m"
		cd $HOME/$repo && git pull origin master && git add . \
		               && git commit -a -m "autocommit on $(date)"\
		               && git push origin master
	done
;;
# show git status for all repos
status)
	for repo in ${REPOS[@]}; do
		echo -e "\n\e[1;32m## Repository located at '$HOME/$repo' ##\e[m"
		cd $HOME/$repo && git status
	done
;;

# initialize a new repository locally, and at remote. Add the new repository to
# REPOS in .gitsyrc
init)
	[[ "$2" == "" ]] && \
		echo -e "$0: REPO must be specifed! (Try '$0 help')" && exit 1
	cd $HOME/$2
	echo "# Initializing repo at localhost"
	git init
	if [ "$REMOTE_HOST" ]; then
		echo "# Initializing bare repo at $REMOTE_HOST"
		ssh $REMOTE_USER@$REMOTE_HOST git init --bare $REMOTE_DIR/$2.git
		git remote add origin $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR/$2.git
	else
		echo "# Initializing bare repo at localhost"
		git init --bare $REMOTE_DIR/$2.git
		git add remote origin $REMOTE_DIR/$2.git
	fi
	echo "# Performing '$ git add .' at localhost"
	git add .
	# Add $2 to REPOS:
	add2repos "$2"
;;

# Clone an existing repository from remote. Add the repository to REPOS in
# .gitsyrc
clone)
	[[ "$2" == "" ]] && \
		echo -e "$0: REPO must be specifed! (Try '$0 help')" && exit 1
	cd $HOME
	if [ "$REMOTE_HOST" ]; then
		git clone $REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR/$2.git
	else
		git clone $REMOTE_DIR/$2.git
	fi
	# Add $2 to REPOS:
	add2repos "$2"
;;

# Invalid  or missing command
*)
	echo "$0: Subcommand '$1' not found! (Try '$0 help')" && exit 1
;;
esac
